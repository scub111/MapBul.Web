@using MapBul.DBContext
@using MapBul.SharedClasses.Constants
@using MapBul.Web.Helpers
@using Ninject.Infrastructure.Language
@model MapBul.Web.Models.NewJournalistModel

@{
    bool isAdmin = Html.IsUserInRoles(UserTypes.Admin);
    var isReadonly = isAdmin ? "notreadonly" : "readonly";
    var isDisabled = isAdmin ? "notdisabled" : "disabled";
}

<div class="panel">
    <div class="panel-heading">

    </div>
    <div class="panel-body">
        @using (Ajax.BeginForm("EditJournalist", "Users", new AjaxOptions { HttpMethod = "POST", OnSuccess = "EditJournalistSuccess", OnFailure = "ViewNotification('Не удалось сохранить изменения','error')", AllowCache = false }))
        {
            @Html.HiddenFor(m => m.Id)
            <div class="row">
                <div class="col-md-5">
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.LastName, new Dictionary<string, object> { { "class", "form-control" }, { "placeholder", "Фамилия" }, { "required", "" }, { isReadonly,""} })
                    </div>
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.FirstName, new Dictionary<string, object> { { "class", "form-control" }, { "placeholder", "Имя" }, { "required", "" }, { isReadonly, "" } })
                    </div>
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.MiddleName, new Dictionary<string, object> { { "class", "form-control" }, { "placeholder", "Отчество" }, { "required", "" }, { isReadonly, "" } })
                    </div>
                    <div class="form-group">
                        @Html.DropDownListFor(m => m.Gender, UserParameters.Sex.Select(s => new SelectListItem { Text = s, Value = s }), new Dictionary<string, object> { { "class", "form-control" }, { "required", "Пол" }, { isDisabled, "" } })
                    </div>
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.Phone, new Dictionary<string, object> { { "class", "form-control" }, { "placeholder", "Телефон" }, { "required", "" }, { isReadonly, "" } })
                    </div>
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.Address, new Dictionary<string, object> { { "class", "form-control" }, { "placeholder", "Адрес" }, { "required", "" }, { isReadonly, "" } })
                    </div>
                    <div class="form-group">
                        @Html.TextBox("BirthDate", Model.BirthDate.ToString("dd.MM.yyyy"), new Dictionary<string, object> { { "class", "form-control datepicker" }, { "placeholder", "Дата рождения" }, { "required", "" }, { isReadonly, "" } })
                    </div>
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.Email, new Dictionary<string, object> { { "class", "form-control" }, { "placeholder", "Email" }, { "required", "" }, { isReadonly, "" } })
                    </div>
                </div>
                <div class="col-md-7">
                    <div class="form-group">
                        @Html.ListBox("PermittedCountries", new MultiSelectList((List<country>)ViewBag.Countries, "Id", "Name", Model.PermittedCountries), new Dictionary<string, object> { { "class", "form-control chosenselect" }, { "data-placeholder", "Выберите страны" }, { "multiple", "" }, { isDisabled, "" } })
                    </div>
                    <!--<div class="form-group">
                        Html.ListBox("PermittedRegions", new MultiSelectList((List<region>)ViewBag.Regions, "Id", "Name", Model.PermittedRegions), new Dictionary<string, object> { { "class", "form-control chosenselect" }, { "data-placeholder", "Выберите регионы" }, { "multiple", "" }, { isDisabled, "" } })
                    </div>-->
                    <div class="form-group">
                        @Html.ListBox("PermittedCities", new MultiSelectList((List<city>)ViewBag.Cities, "Id", "Name", Model.PermittedCities), new Dictionary<string, object> { { "class", "form-control chosenselect" }, { "data-placeholder", "Выберите города" }, { "multiple", "" }, { isDisabled, "" } })
                    </div>
                    <div class="form-group">
                        @Html.DropDownListFor(m => m.EditorId, ((List<editor>)ViewBag.Editors).Select(e => new SelectListItem { Text = e.LastName + " " + e.FirstName + " " + e.MiddleName, Value = e.Id.ToString(), Selected = Model.EditorId == e.Id }).Union(new List<SelectListItem> { new SelectListItem { Selected = Model.EditorId == null, Value = "null", Text = "Нет" } }), new Dictionary<string, object> { { "class", "form-control chosenselect" }, { "data-placeholder", "Выберите редактора" }, { isDisabled, "" } })
                    </div>
                    <div class="form-group">
                        <label class="control-label">Заблокирован</label>
                        @Html.CheckBoxFor(m => m.Deleted, new Dictionary<string, object> { { "class", "checkbox" }, { isDisabled, "" } })
                    </div>
                </div>
            </div>
            <div class="form-group">
                @if (isAdmin)
                {
                    <input type="submit" class="btn btn-primary" value="Сохранить"/>
                }
            </div>
        }
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {

        $('.datepicker').datepicker({ language: "ru" });

        $('.chosenselect').chosen();

        var a = $('.checkbox');
        a.each(function () {
            Switchery(this, { color: '#1AB394' });
        });
    });
</script>

