@using System.Globalization
@using MapBul.DBContext
@using MapBul.Web.Helpers
@using MapBul.Web.Resource
@model MapBul.Web.Models.NewMarkerModel

<div class="ibox">
    <div class="ibox-title">
        <h3>Редактировать маркер</h3>
    </div>
    <div class="ibox-content">
        <h5>@Resource.RequiredFields</h5>
        <form action="#" method="POST" id="EditMarkerForm">
            <div class="row">
                <div class="col-md-6">
                    @Html.HiddenFor(m => m.Id)
                    @Html.HiddenFor(m => m.Photo)
                    @Html.HiddenFor(m => m.Logo)

                    <div class="form-group">
                        @if (Request.UserLanguages[0].ToUpper().Contains("RU"))
                        {
                            @Html.TextBoxFor(m => m.Name, new Dictionary<string, object> { { "placeholder", Resource.Name + "*" }, { "class", "form-control" }, { "required", "" } })
                            @Html.TextBoxFor(m => m.NameEn, new Dictionary<string, object> { { "placeholder", "Name" }, { "class", "form-control" }, { "style", "margin-top: 5px" } })
                        }
                        else
                        {
                            @Html.TextBoxFor(m => m.NameEn, new Dictionary<string, object> { { "placeholder", Resource.Name + "*" }, { "class", "form-control" }, { "required", "" } })
                        }
                    </div>
                    <div class="form-group">
                        @if (Request.UserLanguages[0].ToUpper().Contains("RU"))
                        {
                            @Html.TextBoxFor(m => m.Introduction, new Dictionary<string, object> { { "placeholder", "Вступление*" }, { "class", "form-control" }, { "required", "" } })
                            @Html.TextBoxFor(m => m.IntroductionEn, new Dictionary<string, object> { { "placeholder", "Introduction" }, { "class", "form-control" }, { "style", "margin-top: 5px" } })
                        }
                        else
                        {
                            @Html.TextBoxFor(m => m.IntroductionEn, new Dictionary<string, object> { { "placeholder", "Introduction*" }, { "class", "form-control" }, { "required", "" } })
                        }
                    </div>
                    <div class="form-group">
                        @if (Request.UserLanguages[0].ToUpper().Contains("RU"))
                        {
                            @Html.TextAreaFor(m => m.Description, new Dictionary<string, object> { { "placeholder", Resource.Description + "*" }, { "class", "form-control" }, { "required", "" } })
                            @Html.TextAreaFor(m => m.DescriptionEn, new Dictionary<string, object> { { "placeholder", "Description" }, { "class", "form-control" }, { "style", "margin-top: 5px" } })
                        }
                        else
                        {
                            @Html.TextAreaFor(m => m.IntroductionEn, new Dictionary<string, object> { { "placeholder", "Description*" }, { "class", "form-control" }, { "required", "" } })
                        }
                    </div>
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.Site, new Dictionary<string, object> {{"placeholder", Resource.Site }, {"class", "form-control"}})
                    </div>
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.Email, new Dictionary<string, object> {{"placeholder", "Email"}, {"class", "form-control"}})
                    </div>
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.EntryTicket, new Dictionary<string, object> {{"placeholder", Resource.PinEntranceFee}, {"class", "form-control"}})
                    </div>
                    <div class="form-group">
                        @Html.TextBox("Phones", Model.Phones.FirstOrDefault()??"", new Dictionary<string, object> { { "placeholder", "Телефон" }, { "class", "form-control" }, { "data-mask", "+?9999999999999999999999999" }, { "data-placeholder", " " } })
                    </div>
                    <div class="form-group">
                        <label class="control-label">@Resource.BaseCategory</label>
                        @Html.DropDownListFor(m => m.BaseCategoryId, ((List<category>) ViewBag.Categories).Select(c => new SelectListItem {Text = Request.UserLanguages[0].ToUpper().Contains("RU")? c.Name +" "+c.EnName:c.EnName, Value = c.Id.ToString()}), new Dictionary<string, object> {{"class", "form-control chosenselect"}, {"required", ""}})
                    </div>
                    <div class="form-group">
                        <label class="control-label">Тэги</label>
                        @Html.ListBoxFor(m => m.SubCategories, ((List<category>) ViewBag.Categories).Select(c => new SelectListItem {Selected = Model.SubCategories.Contains(c.Id), Text = Request.UserLanguages[0].ToUpper().Contains("RU")? c.Name +" "+c.EnName:c.EnName, Value = c.Id.ToString()}), new Dictionary<string, object> {{"class", "form-control chosenselect"}, {"multiple", ""}, {"data-placeholder", "Выберите тэги"}})
                    </div>
                    <div class="form-group">
                        <label class="control-label">Новая фотография <br /> (Фотография, отображаемая в описании метки)</label>
                        <input type="file" id="EditMarkerPhotoInput" class="form-control fileinput" accept="image/jpeg, image/png" />
                    </div>
                    <div class="form-group">
                        <label class="control-label">Новый логотип <br/> @Resource.PinLogoText</label>
                        <input type="file" id="EditMarkerLogoInput" class="form-control fileinput" accept="image/jpeg, image/png"/>
                    </div>
                    <div class="form-group">
                        <div class="checkbox i-checks">
                            <label>@Html.CheckBoxFor(m => m.Wifi)<i></i>@Resource.PinWiFi </label>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label class="control-label">@Resource.PinSelectCityFromList</label>
                        <select name="CityId" id="MarkerCitySelect" class="form-control chosenselect" required="">
                            @foreach (var city in (List<city>) ViewBag.Cities)
                            {
                                if (city.Id == 0)
                                {
                                    <option value="@city.Id" data-city-placeid="@city.PlaceId">@city.Name</option>
                                }
                                else
                                {
                                    <option @(city.Id == Model.CityId ? "selected" : "") value="@city.Id" data-city-placeid="@city.PlaceId">@city.Name, @city.country.Name</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.Street, new Dictionary<string, object> {{"id", "EditMarkerStreetInput"}, {"placeholder", Resource.PinStreet}, {"class", "form-control"}})
                    </div>
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.House, new Dictionary<string, object> {{"id", "EditMarkerHouseInput"}, {"placeholder", Resource.PinHouse}, {"class", "form-control"}})
                    </div>
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.Buliding, new Dictionary<string, object> {{"id", "EditMarkerBuildingInput"}, {"placeholder", Resource.PinBuilding }, {"class", "form-control"}})
                    </div>
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.Floor, new Dictionary<string, object> {{"placeholder", Resource.PinFloor }, {"class", "form-control"}})
                    </div>
                    <div class="form-group">
                        <label class="control-label">@Resource.PinEnterTheCoordinates</label>
                        <div class="row">
                            <div class="col-xs-6">
                                <input class="form-control" type="number" id="MarkerLatInput" placeholder="@Resource.PinLatitude" value=@Model.Lat.ToString(new NumberFormatInfo{NumberDecimalSeparator = ".", NumberGroupSeparator = ","}) />
                            </div>
                            <div class="col-xs-6">
                                <input class="form-control" type="number" id="MarkerLngInput" placeholder="@Resource.PinLongitude" value=@Model.Lng.ToString(new NumberFormatInfo { NumberDecimalSeparator = ".", NumberGroupSeparator = "," }) />
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label">@Resource.PinDiscount</label>
                        @Html.DropDownListFor(m => m.DiscountId, ((List<discount>) ViewBag.Discounts).Select(c => new SelectListItem {Text = c.Value.ToString() + "%", Value = c.Id.ToString()}), new Dictionary<string, object> {{"class", "form-control chosenselect"}, {"required", ""}})
                    </div>
                    <div class="form-group">
                        <label class="control-label">@Resource.Status</label>
                        @Html.DropDownListFor(m => m.StatusId, ((List<status>) ViewBag.Statuses).Select(c => new SelectListItem {Text = c.Description, Value = c.Id.ToString()}), new Dictionary<string, object> {{"class", "form-control chosenselect"}, {"required", ""}})
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="col-sm-6">
                                <label class="control-label">Фотография</label>
                                <div class="col-sm-12">
                                    @if (Model.Photo != null)
                                    {
                                        <img class="col-sm-12" src="@Html.MapImage(Model.Photo)" />
                                    }
                                    else
                                    {
                                        <label class="label-danger">Не задано</label>
                                    }
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <label class="control-label">@Resource.PinLogo</label>
                                <div class="col-sm-12">
                                    @if (Model.Logo != null)
                                    {
                                        <img class="col-sm-12" src="@Html.MapImage(Model.Logo)" />
                                    }
                                    else
                                    {
                                        <label class="label-danger">Не задано</label>
                                    }
                                </div>
                            </div>
                        </div>
                        
                    </div>
                </div>
            </div>
            <div class="row">
                <div id="GMap" style="width: 100%; height: 300px;">
                </div>
            </div>
            <div class="row" style="padding-top: 30px;">
                <div class="panel">
                    <div class="panel-heading border-bottom">
                        <h3>@Resource.PinOpenHours</h3>
                    </div>
                    <div class="panel-body" style="padding-bottom: 90px">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th></th>
                                    @if (Request.UserLanguages[0].ToUpper().Contains("RU"))
                                    {
                                        foreach (var weekDay in ((List<weekday>)ViewBag.WeekDays))
                                        {
                                            <th>@weekDay.Description</th>
                                        }
                                    }
                                    else
                                    {
                                        foreach (var weekDay in ((List<weekday>)ViewBag.WeekDays))
                                        {
                                            <th>@weekDay.DescriptionEn</th>
                                        }
                                    }
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>@Resource.PinOpen</td>
                                    @foreach (var weekDay in ((List<weekday>)ViewBag.WeekDays))
                                    {
                                        var tmpWorkTime = Model.WorkTimes.FirstOrDefault(wt => wt.WeekDayId == weekDay.Id);
                                        <td>
                                            <div class="input-group clockpicker" data-autoclose="true">
                                                <input data-weekdayid="@weekDay.Id" class="OpenTime form-control" type="text" value="@(tmpWorkTime != null ? tmpWorkTime.OpenTime.ToString(@"hh\:mm") : "")" />
                                            </div>
                                        </td>
                                    }
                                </tr>
                                <tr>
                                    <td>@Resource.PinClose</td>
                                    @foreach (var weekDay in ((List<weekday>)ViewBag.WeekDays))
                                    {
                                        var tmpWorkTime = Model.WorkTimes.FirstOrDefault(wt => wt.WeekDayId == weekDay.Id);
                                        <td>
                                            <div class="input-group clockpicker" data-autoclose="true">
                                                <input data-weekdayid="@weekDay.Id" class="CloseTime form-control" type="text" value="@(tmpWorkTime != null ? tmpWorkTime.CloseTime.ToString(@"hh\:mm") : "")" />
                                            </div>
                                        </td>
                                    }
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="form-group text-right">
                <input type="button" id="EditMarkerFormSubmit" value="@Resource.Save" class="btn btn-primary"/>
            </div>
        </form>
    </div>
</div>

@{
    var numberProvider = new NumberFormatInfo {NumberDecimalSeparator = "."};
}

<script type="text/javascript">
    var marker;
    var map;
    var markerLat=@Model.Lat.ToString("###.######", numberProvider);
    var markerLng=@Model.Lng.ToString("###.######", numberProvider);
    OnEditMarkerDocumentReady();
</script>